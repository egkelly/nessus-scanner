image: docker:19.03.1

services:
  - docker:19.03.1-dind

## Should contain at least these three stages for a basic CI/CD
stages:
  - staging
  - test
  - production

variables:
  ## Disable TLS Mode for DIND or enable using instructions from https://about.gitlab.com/releases/2019/07/31/docker-in-docker-with-docker-19-dot-03/
  DOCKER_TLS_CERTDIR: ""


deploy-to-stage:
  stage: staging
  script:
    - eval $(ssh-agent -s)
    - echo "$SSH_STAGING_SERVER_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - docker context create remote ‐‐docker “host=ssh://$SSH_STAGING_USER@SSH_STAGING_IP”
    - docker-compose --context remote down --remove-orphans
    - docker-compose --context remote pull
    - docker-compose --context remote" up -d

  only:
    - master


staging-test: 
  variables:
    CONTAINER: nessus

  stage: test
  script:
    - scp test/is-alive.sh $SSH_STAGING_USER@SSH_STAGING_IP:/tmp
    - ssh $SSH_STAGING_USER@SSH_STAGING_IP "sudo /bin/bash /tmp/is-alive.sh $CONTAINER"
    - ssh $SSH_STAGING_USER@SSH_STAGING_IP "rm -rf /tmp/is-alive.sh"

  only:
    - master

docker-deploy-production:
  variables:
    ## Now Connect to Remote Docker Daemon on Deployment Machine using TLS.
    DOCKER_HOST: tcp://$DEPLOYMENT_HOST_IP:2376
    DOCKER_TLS_VERIFY: 1


  stage: production
  script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PROD_SERVER_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - docker context create remote ‐‐docker “host=ssh://$SSH_PROD_USER@SSH_PROD_IP”
    - docker-compose --context remote down --remove-orphans
    - docker-compose --context remote pull
    - docker-compose --context remote" up -d

  only:
    - master
